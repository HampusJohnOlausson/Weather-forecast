{"version":3,"sources":["components/Header.jsx","components/Main.jsx","components/Layout.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","onSubmit","e","changeWeather","placeholder","onChange","changeLocation","target","value","Main","weatherData","location","description","temperature","region","country","Layout","state","coords","latitude","longitude","data","inputUser","setState","event","preventDefault","axios","get","then","res","name","current","weather_descriptions","icon","weather_icons","catch","error","alert","navigator","geolocation","getCurrentPosition","position","newCoords","console","log","this","Component","App","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b46e441d.chunk.js","sourcesContent":["import React from 'react';\nimport '../Sass/header.scss';\n\nconst Header = (props) => {\n  return (\n    <div>\n      <header className=\"header\">\n        <h2 className=\"title\">Today's Weather</h2>\n        <form onSubmit={(e) => props.changeWeather(e)}>\n          <div className=\"search-container\">\n            <input\n              placeholder=\"Search location...\"\n              className=\"input\"\n              onChange={(e) => props.changeLocation(e.target.value)}\n            />\n            <button className=\"search-btn\">\n              <i className=\"fas fa-search-location\"></i>\n            </button>\n          </div>\n        </form>\n      </header>\n    </div>\n  );\n}\n\nexport default Header\n\n","import React from 'react'\nimport '../Sass/main.scss';\n\nconst Main = (props) => {\n\n     const { location, description, temperature,  region , country  } = props.weatherData;\n\n    return (\n      <main className=\"main-container\">\n        <div className=\"info-container\">\n          <h4 className=\"description\">{description}</h4>\n          <h2 className=\"degrees\">{temperature}Â°c</h2>\n          <div className=\"region-container\">\n            <h3 className=\"location\">{location}</h3>\n            <h5 className=\"city\">\n              {region}, {country}\n            </h5>\n          </div>\n        </div>\n      </main>\n    );\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport Header from './Header'\nimport Main from './Main'\nimport axios from \"axios\";\nimport '../App.scss';\n\nexport default class Layout extends Component {\n  state = {\n    coords: {\n      latitude: 45,\n      longitude: 60,\n    },\n    data: {},\n    inputUser: ''\n  };\n\n  componentDidMount() {\n    // get device current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        let newCoords = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        };\n\n        this.setState({ coords: newCoords });\n\n        //Api\n        axios\n          .get(\n            `http://api.weatherstack.com/current?access_key=92bce988b9016eae571b967acf532f4c&query=\n          ${this.state.coords.latitude},\n          ${this.state.coords.longitude}`\n          )\n          .then((res) => {\n            let weatherData = {\n              location: res.data.location.name,\n              temperature: res.data.current.temperature,\n              description: res.data.current.weather_descriptions[0],\n              region: res.data.location.region,\n              country: res.data.location.country,\n              icon: res.data.current.weather_icons,\n            };\n\n            this.setState({ data: weatherData });\n          });\n      });\n    } else {\n      console.log(\"Your device is not supported by navigator geolocation!\");\n    }\n  }\n\n  changeLocation = (value) => {\n    this.setState({ inputUser: value })\n  }\n\n  changeWeather = (event) => { \n    event.preventDefault();\n    axios.get(\n      `https://api.weatherstack.com/current?access_key=92bce988b9016eae571b967acf532f4c&query=${this.state.inputUser}`\n    ).then(res => {\n      let weatherData = {\n        location: res.data.location.name,\n        temperature: res.data.current.temperature,\n        description: res.data.current.weather_descriptions[0],\n        region: res.data.location.region,\n        country: res.data.location.country,\n        icon: res.data.current.weather_icons,\n      };\n\n      this.setState({ data: weatherData });\n    }).catch(error => {\n       \n       alert('Couldnt find the location!')\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\"> \n        <Header \n        changeWeather={this.changeWeather}\n        changeLocation={this.changeLocation} />\n        <Main \n        weatherData={this.state.data} />\n      </div>\n    );\n  }\n}\n\n","import './App.scss';\nimport React from 'react'\nimport Layout from './components/Layout';\n\nclass App extends React.Component {\n\n  render(){\n    return (\n      <>\n        <Layout />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}